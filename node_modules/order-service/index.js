const express = require('express');
const app = express();
const PORT = 3001;

app.use(express.json());

// In-memory database untuk menyimpan data order
const orders = {};

// Endpoint untuk membuat order baru
app.post('/create-order', (req, res) => {
    const { items, totalAmount, shippingAddress } = req.body;
    
    // Generate ID order secara acak
    const orderId = 'ORD-' + Math.floor(Math.random() * 10000);
    
    // Simpan order dengan status PENDING
    orders[orderId] = {
        id: orderId,
        items,
        totalAmount,
        shippingAddress,
        status: 'PENDING',
        createdAt: new Date()
    };
    
    console.log(`Order ${orderId} dibuat dengan status PENDING`);
    
    // Kembalikan detail order
    res.status(201).json({
        success: true,
        orderId,
        status: 'PENDING'
    });
});

// Endpoint kompensasi untuk membatalkan order
app.post('/cancel-order', (req, res) => {
    const { orderId } = req.body;
    
    // Cek apakah order ada
    if (!orders[orderId]) {
        return res.status(404).json({
            success: false,
            message: `Order ${orderId} tidak ditemukan`
        });
    }
    
    // Update status order menjadi CANCELLED
    orders[orderId].status = 'CANCELLED';
    
    console.log(`Order ${orderId} dibatalkan`);
    
    res.status(200).json({
        success: true,
        orderId,
        status: 'CANCELLED'
    });
});

// Endpoint untuk mendapatkan detail order
app.get('/order/:orderId', (req, res) => {
    const orderId = req.params.orderId;
    
    if (!orders[orderId]) {
        return res.status(404).json({
            success: false,
            message: `Order ${orderId} tidak ditemukan`
        });
    }
    
    res.status(200).json({
        success: true,
        order: orders[orderId]
    });
});

// Jalankan server
app.listen(PORT, () => {
    console.log(`Order Service berjalan di port ${PORT}`);
});